// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model kategori {
  id      Int       @id @default(autoincrement())
  name    String
  project Project[]
}

model owner {
  id      Int       @id @default(autoincrement())
  name    String
  project Project[]
}

model status {
  id      Int       @id @default(autoincrement())
  name    String
  project Project[]
}

model Project {
  id               Int               @id @default(autoincrement())
  name             String
  location         String
  kategori         kategori          @relation(fields: [kategoriId], references: [id])
  kategoriId       Int
  owner            owner             @relation(fields: [ownerId], references: [id])
  ownerId          Int
  status           status            @relation(fields: [statusId], references: [id])
  statusId         Int
  imageUrl         String?
  TanggalPembuatan DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  projectTracking  ProjectTracking[]
}

model Pengguna {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  name            String
  password        String
  role            String            @default("user")
  createdAt       DateTime          @default(now())
  updateAt        DateTime          @updatedAt
  projectTracking ProjectTracking[]
}

model ProjectTracking {
  id         Int      @id @default(autoincrement())
  Project    Project  @relation(fields: [projectId], references: [id])
  projectId  Int
  Pengguna   Pengguna @relation(fields: [penggunaId], references: [id])
  penggunaId Int
  createdAt  DateTime @default(now())
}
